/* eslint-disable react/no-unknown-property */
/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import * as THREE from 'three';
import React from 'react';
import { useGLTF } from '@react-three/drei';
import { GLTF } from 'three-stdlib';

type GLTFResult1 = GLTF & {
  nodes: {
    groupNumber_0_16: THREE.Mesh;
    groupNumber_0: THREE.Mesh;
    groupNumber_0_6: THREE.Mesh;
    groupNumber_0_2: THREE.Mesh;
    groupNumber_0_15: THREE.Mesh;
    groupNumber_0_18: THREE.Mesh;
    groupNumber_0_17: THREE.Mesh;
  };
  materials: {
    material0: THREE.MeshStandardMaterial; // 手跟腳 #64cb82
    material1: THREE.MeshStandardMaterial; // #74ad57
    material2: THREE.MeshStandardMaterial; // #eddaa8
    material3: THREE.MeshStandardMaterial; // #853817
  };
};

type GLTFResult2 = GLTF & {
  nodes: {
    groupNumber_0_11: THREE.Mesh;
    groupNumber_0_14: THREE.Mesh;
    groupNumber_0_13: THREE.Mesh;
    groupNumber_0_12: THREE.Mesh;
  };
  materials: {
    material0: THREE.MeshStandardMaterial; // 手跟腳 64cb82
  };
};

type GLTFResult3 = GLTF & {
  nodes: {
    groupNumber_1_2: THREE.Mesh;
    groupNumber_1: THREE.Mesh;
    groupNumber_0_9: THREE.Mesh;
    groupNumber_0_8: THREE.Mesh;
  };
};

type Props = {
  skinColor: string;
  pulpColor: string;
  seedColor: string;
  handIdx: number;
  handColor: string;
  footIdx: number;
  footColor: string;
} & JSX.IntrinsicElements['group'];

export function Model({
  skinColor,
  pulpColor,
  seedColor,
  handIdx,
  handColor,
  footIdx,
  footColor,
  ...props
}: Props) {
  const { nodes, materials } = useGLTF(
    'models/avocado3/model.glb'
  ) as unknown as GLTFResult1;

  const { nodes: n1, materials: m1 } = useGLTF(
    '/models/avocado4/model.glb'
  ) as unknown as GLTFResult2;

  const { nodes: n2 } = useGLTF(
    '/models/avocado5/model.glb'
  ) as unknown as GLTFResult3;

  materials.material0.color.set(handColor);
  m1.material0.color.set(footColor);
  materials.material1.color.set(skinColor);
  materials.material2.color.set(pulpColor);
  materials.material3.color.set(seedColor);

  const leftHand = [
    <mesh
      geometry={nodes.groupNumber_0_15.geometry}
      material={materials.material0}
      position={[1.7, 2.83, 0.4]}
      key={'leftHand0'}
    />,
    <mesh
      geometry={n1.groupNumber_0_11.geometry}
      material={materials.material0}
      position={[1.45, 2.6, 0.55]}
      rotation={[-0.44, 0.32, 0.15]}
      scale={[1, 1, 0.32]}
      key={'leftHand1'}
    />,
    <mesh
      geometry={n2.groupNumber_1.geometry}
      material={materials.material0}
      position={[1.8, 3, 0.4]}
      key={'leftHand2'}
    />,
  ];

  const rightHand = [
    <mesh
      geometry={nodes.groupNumber_0_16.geometry}
      material={materials.material0}
      position={[-1.65, 2.47, 0.59]}
      key={'rightHand0'}
    />,
    <mesh
      geometry={n1.groupNumber_0_14.geometry}
      material={materials.material0}
      position={[-1.8, 2.2, 0.38]}
      key={'rightHand1'}
    />,
    <mesh
      geometry={n2.groupNumber_1_2.geometry}
      material={materials.material0}
      position={[-1.6, 3, 0.4]}
      key={'rightHand2'}
    />,
  ];

  const leftFoot = [
    <mesh
      geometry={nodes.groupNumber_0_17.geometry}
      material={m1.material0}
      position={[1.24, 0.82, 0.06]}
      key={'leftFoot0'}
    />,
    <mesh
      geometry={n1.groupNumber_0_13.geometry}
      material={m1.material0}
      position={[0.78, 0.85, 0.8]}
      rotation={[0.24, 1.08, 0]}
      key={'leftFoot1'}
    />,
    <mesh
      geometry={n2.groupNumber_0_8.geometry}
      material={m1.material0}
      position={[0.9, 0.47, 0.5]}
      rotation={[-0.27, 0.23, 0.29]}
      scale={2}
      key={'leftFoot2'}
    />,
  ];

  const rightFoot = [
    <mesh
      geometry={nodes.groupNumber_0_18.geometry}
      material={m1.material0}
      position={[-1.04, 0.82, 0.06]}
      key={'rightFoot0'}
    />,
    <mesh
      geometry={n1.groupNumber_0_12.geometry}
      material={m1.material0}
      position={[-0.8, 0.98, 0.8]}
      rotation={[0, 0.98, 0]}
      key={'rightFoot1'}
    />,
    <mesh
      geometry={n2.groupNumber_0_9.geometry}
      material={m1.material0}
      position={[-0.5, 0.53, 0.09]}
      rotation={[0, 0.28, 0]}
      scale={2}
      key={'rightFoot2'}
    />,
  ];

  return (
    <group {...props} dispose={null}>
      {leftHand[handIdx]}
      {rightHand[handIdx]}
      {leftFoot[footIdx]}
      {rightFoot[footIdx]}

      <mesh
        geometry={nodes.groupNumber_0.geometry}
        material={materials.material1}
        position={[0.1, 3.22, -0.17]}
        rotation={[-Math.PI, 0, -Math.PI]}
      />
      <mesh
        geometry={nodes.groupNumber_0_6.geometry}
        material={materials.material2}
        position={[0.08, 3.1, -0.02]}
        rotation={[Math.PI, 0, Math.PI]}
      />
      <mesh
        geometry={nodes.groupNumber_0_2.geometry}
        material={materials.material3}
        position={[0.13, 2.61, 0.3]}
        rotation={[-1.4, 1.01, -0.34]}
        // scale={[1.1, 1.12, 1.1]}
        scale={[1.3, 1.32, 1.3]}
      />
    </group>
  );
}

useGLTF.preload('/models/avocado3/model.glb');
useGLTF.preload('/models/avocado4/model.glb');
