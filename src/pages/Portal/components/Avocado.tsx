/* eslint-disable react/no-unknown-property */
/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import * as THREE from 'three';
import React, { useRef, useState } from 'react';

import { useGLTF } from '@react-three/drei';
import { GLTF } from 'three-stdlib';
import { useFrame } from '@react-three/fiber';
import { useSpring, animated as a } from '@react-spring/three';

type GLTFResult = GLTF & {
  nodes: {
    groupNumber_0_6: THREE.Mesh;
    groupNumber_0_2: THREE.Mesh;
    groupNumber_0: THREE.Mesh;
  };
  materials: {
    material0: THREE.MeshStandardMaterial;
    material1: THREE.MeshStandardMaterial;
    material2: THREE.MeshStandardMaterial;
  };
};

const Avocado = (props: JSX.IntrinsicElements['group']) => {
  const { nodes, materials } = useGLTF(
    'models/avocado1/model.glb'
  ) as unknown as GLTFResult;

  const spring = useAvocadoSpring();

  const ref = useRef<THREE.Group>(null);
  const [isRotate, setIsRotate] = useState(true);

  const handlePointerEnter = () => {
    setIsRotate(() => false);
  };
  const handlePointerLeave = () => {
    setIsRotate(() => true);
  };

  useFrame((state, delta) => {
    if (ref.current && isRotate) {
      ref.current.rotation.y += delta * 0.5;
    }
  });

  return (
    <a.group
      {...props}
      {...spring}
      ref={ref}
      rotation={[-0, -1.5, -0.6]}
      onPointerEnter={handlePointerEnter}
      onPointerLeave={handlePointerLeave}
      dispose={null}
      castShadow
      receiveShadow
    >
      <mesh
        geometry={nodes.groupNumber_0_6.geometry}
        material={materials.material0}
        position={[-0.05, 1.62, 0.12]}
        rotation={[1.39, -0.76, 0.9]}
        castShadow
        receiveShadow
      />
      <mesh
        geometry={nodes.groupNumber_0_2.geometry}
        material={materials.material1}
        position={[0.67, 1.82, -0.03]}
        rotation={[0.97, 0.75, -1.3]}
        scale={[1, 1.02, 1]}
        castShadow
        receiveShadow
      />
      <mesh
        geometry={nodes.groupNumber_0.geometry}
        material={materials.material2}
        position={[-0.56, 1.4, 0.22]}
        rotation={[1.41, -0.85, 0.98]}
        castShadow
        receiveShadow
      />
    </a.group>
  );
};

const useAvocadoSpring = () =>
  useSpring({
    from: {
      scale: 0,
    },
    to: {
      scale: 1,
    },
  });

useGLTF.preload('models/avocado1/model.glb');

export default Avocado;
